(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{5325:function(t,l,e){t.exports=e.p+"assets/img/04.d700da1b.png"},5326:function(t,l,e){t.exports=e.p+"assets/img/05.f75d5469.png"},6160:function(t,l,e){"use strict";e.r(l);var i=e(15),n=Object(i.a)({},(function(){var t=this,l=t.$createElement,i=t._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"_1-什么是plugin"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是plugin"}},[t._v("#")]),t._v(" 1. 什么是Plugin")]),t._v(" "),i("p",[i("strong",[t._v("Webpack的另一个核心是Plugin")])]),t._v(" "),i("ul",[i("li",[t._v("Loader是用于特定的模块类型进行转换")]),t._v(" "),i("li",[t._v("Plugin可以用于执行更加广泛的任务，比如打包优化、资源管理、环境变量注入等")])]),t._v(" "),i("h2",{attrs:{id:"_2-cleanwebpackplugin"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-cleanwebpackplugin"}},[t._v("#")]),t._v(" 2. CleanWebpackPlugin")]),t._v(" "),i("p",[t._v("每次修改了一些配置，重新打包时，都需要手动删除dist文件夹，可以借助于一个插件来帮助我们完成，这个插件就是CleanWebpackPlugin")]),t._v(" "),i("ul",[i("li",[t._v("安装：npm install clean-webpack-plugin -D")])]),t._v(" "),i("h2",{attrs:{id:"_3-htmlwebpackplugin"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-htmlwebpackplugin"}},[t._v("#")]),t._v(" 3. HtmlWebpackPlugin")]),t._v(" "),i("ul",[i("li",[t._v("我们的HTML文件是编写在根目录下的，而最终打包的dist文件夹中是没有index.html文件的")]),t._v(" "),i("li",[t._v("使用HtmlWebpackPlugin，可以生成一个html文件，并将打包后的js插件到html中")]),t._v(" "),i("li",[t._v("使用HtmlWebpackPlugin，也可以根据模拟生成一个html文件，并将打包后的js插件到html中")]),t._v(" "),i("li",[t._v("安装：npm install html-webpack-plugin -D")])]),t._v(" "),i("p",[i("strong",[t._v("在配置HtmlWebpackPlugin时，我们可以添加如下配置")])]),t._v(" "),i("ul",[i("li",[t._v("template：指定我们要使用的模块所在的路径；")]),t._v(" "),i("li",[t._v("title：在进行htmlWebpackPlugin.options.title读取时，就会读到该信息；")])]),t._v(" "),i("h2",{attrs:{id:"_4-defineplugin的介绍"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-defineplugin的介绍"}},[t._v("#")]),t._v(" 4. DefinePlugin的介绍")]),t._v(" "),i("p",[t._v("在引入资源时，代码如下：")]),t._v(" "),i("ul",[i("li",[i("link",{attrs:{rel:"icon",href:"<%= BASE_URL %>favicon.ico"}})]),t._v(" "),i("li",[t._v("使用到一个BASE_URL的常量，但是我们并没有设置过这个常量值")]),t._v(" "),i("li",[t._v("这个时候我们可以使用DefinePlugin插件")])]),t._v(" "),i("p",[i("strong",[t._v("DefinePlugin的使用")])]),t._v(" "),i("ul",[i("li",[t._v("DefinePlugin允许在编译时创建配置的全局常量，是一个webpack内置的插件（不需要单独安装）")]),t._v(" "),i("li",[t._v("编译template就可以正确的编译了，会读取到BASE_URL的值")])]),t._v(" "),i("h2",{attrs:{id:"_5-mode配置"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-mode配置"}},[t._v("#")]),t._v(" 5. Mode配置")]),t._v(" "),i("p",[i("strong",[t._v("Mode配置选项，可以告知webpack使用相应模式的内置优化")])]),t._v(" "),i("ul",[i("li",[t._v("默认值是production（什么都不设置的情况下）")]),t._v(" "),i("li",[t._v("可选值有：'none' | 'development' | 'production'；")])]),t._v(" "),i("img",{staticStyle:{zoom:"70%"},attrs:{src:e(5325)}}),t._v(" "),i("p",[i("strong",[t._v("Mode配置代表更多")])]),t._v(" "),i("img",{staticStyle:{zoom:"70%"},attrs:{src:e(5326)}})])}),[],!1,null,null,null);l.default=n.exports}}]);