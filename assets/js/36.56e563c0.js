(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{5791:function(t,_,v){t.exports=v.p+"assets/img/image-20210305232854139.f6b139ed.png"},5792:function(t,_,v){t.exports=v.p+"assets/img/image-20210219125038371.ed4a75bb.png"},5793:function(t,_,v){t.exports=v.p+"assets/img/image-20210306161216371.5a89f1b9.png"},5794:function(t,_,v){t.exports=v.p+"assets/img/image-20210306005550796.73fadc6b.png"},5795:function(t,_,v){t.exports=v.p+"assets/img/image-20210306011528361.d6a377d5.png"},5796:function(t,_,v){t.exports=v.p+"assets/img/image-20210308102015595.2c8ff1cb.png"},5797:function(t,_,v){t.exports=v.p+"assets/img/image-20210306014409595.b1eabcac.png"},5798:function(t,_,v){t.exports=v.p+"assets/img/image-20210306021013686.6329a436.png"},5799:function(t,_,v){t.exports=v.p+"assets/img/image-20210306021532010.dd1a6f49.png"},5800:function(t,_,v){t.exports=v.p+"assets/img/image-20210219160534616.86ae129f.png"},5801:function(t,_,v){t.exports=v.p+"assets/img/image-20210306023912779.70b99dcd.png"},5802:function(t,_,v){t.exports=v.p+"assets/img/940884-20180423141536107-329179455.f612e47a.png"},5803:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182724715.de4b9082.png"},5804:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182737673.299b1f25.png"},5805:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182821236.4787a9e7.png"},5806:function(t,_,v){t.exports=v.p+"assets/img/940884-20180423141732879-1484228353.1876b572.png"},5807:function(t,_,v){t.exports=v.p+"assets/img/image-20210308123308326.67d1ff7d.png"},5808:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182858733.bc41d4a1.png"},5809:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182913833.22c3e3d6.png"},5810:function(t,_,v){t.exports=v.p+"assets/img/image-20210308182925144.a8f1b88a.png"},6212:function(t,_,v){"use strict";v.r(_);var s=v(15),a=Object(s.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议")]),t._v(" "),s("h2",{attrs:{id:"_1-http有哪些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-http有哪些方法"}},[t._v("#")]),t._v(" 1. HTTP有哪些⽅法？")]),t._v(" "),s("p",[t._v("HTTP 1.0 标准中，定义了3种请求⽅法：GET、POST、HEAD")]),t._v(" "),s("p",[t._v("HTTP 1.1 标准中，新增了请求⽅法：PUT、PATCH、DELETE、OPTIONS、TRACE、CONNECT")]),t._v(" "),s("h2",{attrs:{id:"_2-各个http方法的具体作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-各个http方法的具体作用是什么"}},[t._v("#")]),t._v(" 2. 各个HTTP方法的具体作用是什么？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("GET")]),t._v(" "),s("td",[t._v("通常⽤于请求服务器发送某些资源")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),s("td",[t._v("发送数据给服务器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("HEAD")]),t._v(" "),s("td",[t._v("请求资源的头部信息, 并且这些头部与 HTTP GET ⽅法请求时返回的⼀致。"),s("br"),t._v("该请求⽅法的⼀个使⽤场景是在下载⼀个⼤⽂件前先获取其⼤⼩再决定是否要下载, 以此可以节约带宽资源")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("PUT")]),t._v(" "),s("td",[t._v("⽤于全量修改⽬标资源 (看接口, 也可以用于添加)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("DELETE")]),t._v(" "),s("td",[t._v("⽤于删除指定的资源")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("OPTIONS")]),t._v(" "),s("td",[t._v("⽤于获取⽬的资源所⽀持的通信选项 (跨域请求前, 预检请求, 判断目标是否安全)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("TRACE")]),t._v(" "),s("td",[t._v("该方法会  让服务器  原样返回任意客户端请求的信息内容, 用于诊断和判断")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("CONNECT")]),t._v(" "),s("td",[t._v("HTTP/1.1协议中预留给能够将连接改为管道⽅式的代理服务器"),s("br"),t._v("(把服务器作为跳板，让服务器代替用户去访问其它网页, 之后把数据原原本本的返回给用户)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("PATCH")]),t._v(" "),s("td",[t._v("⽤于对资源进⾏部分修改")])])])]),t._v(" "),s("p",[t._v("GET POST PUT PATCH DELETE")]),t._v(" "),s("p",[t._v("GET/DELETE  参数是在地址栏中传递的")]),t._v(" "),s("p",[t._v("PUT/PATCH/POST 参数是在请求体传递的")]),t._v(" "),s("h2",{attrs:{id:"_3-get方法和post方法有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-get方法和post方法有何区别"}},[t._v("#")]),t._v(" 3. GET方法和POST方法有何区别？")]),t._v(" "),s("p",[t._v("默认的http请求的内容, 在网络中传输, 明文的形式传递的  (https 对内容加密)")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("GET方法")]),t._v(" "),s("th",[t._v("POST方法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("数据传输⽅式")])]),t._v(" "),s("td",[t._v("通过URL传输数据 (地址栏拼接参数)")]),t._v(" "),s("td",[t._v("通过请求体传输")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("数据安全")])]),t._v(" "),s("td",[t._v("数据暴露在URL中，可通过浏览历史记录、缓存等很容易查到数据信息")]),t._v(" "),s("td",[t._v("数据因为在请求主体内，"),s("br"),t._v("所以有⼀定的安全性保证")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("数据类型")])]),t._v(" "),s("td",[t._v("只允许 ASCII 字符")]),t._v(" "),s("td",[t._v("⽆限制")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("GET⽆害")])]),t._v(" "),s("td",[t._v("刷新、后退等浏览器操作是⽆害的")]),t._v(" "),s("td",[t._v("可能会引起重复提交表单")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("功能特性")])]),t._v(" "),s("td",[t._v("安全且幂等（这⾥的安全是指只读特性，就是使⽤这个⽅法不会引起服务器状态变化。"),s("br"),s("strong",[t._v("幂等的概念是指同⼀个请求⽅法执⾏多次和仅执⾏⼀次的效果完全相同）")])]),t._v(" "),s("td",[t._v("⾮安全(会引起服务器端的变化)、"),s("strong",[t._v("⾮幂等")])])])])]),t._v(" "),s("h2",{attrs:{id:"_4-http请求报文是什么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-http请求报文是什么样的"}},[t._v("#")]),t._v(" 4. HTTP请求报文是什么样的？")]),t._v(" "),s("p",[t._v("HTTP 请求报⽂的组成：请求⾏、请求头、(空⾏)、请求体。")]),t._v(" "),s("p",[t._v("实际请求报文实例:")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5791),alt:"image-20210305232854139"}})]),t._v(" "),s("p",[s("strong",[t._v("请求行")])]),t._v(" "),s("p",[t._v("包含了请求⽅法、URL、HTTP 协议版本，它们之间⽤空格进行分隔。例如：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET http://www.abc.com/articles HTTP/1.1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("请求头")])]),t._v(" "),s("p",[t._v("请求头由键值对组成，每⾏⼀对，键值之间⽤英⽂冒号"),s("code",[t._v(":")]),t._v("进行分隔。例如：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Content-Type: application/json\nHost: www.abc.com\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("请求体")])]),t._v(" "),s("p",[t._v("请求体中放置 POST、PUT、PATCH 等请求方法所需要携带的数据。")]),t._v(" "),s("h2",{attrs:{id:"_5-http响应报文是什么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-http响应报文是什么样的"}},[t._v("#")]),t._v(" 5. HTTP响应报文是什么样的？")]),t._v(" "),s("p",[t._v("HTTP 响应报⽂的组成: 响应⾏、响应头、空⾏、响应体。")]),t._v(" "),s("img",{staticStyle:{zoom:"40%"},attrs:{src:v(5792),alt:"image-20210219125038371"}}),t._v(" "),s("p",[s("strong",[t._v("响应行")])]),t._v(" "),s("p",[t._v("响应行由协议版本、状态码、状态码的原因短语3个内容组成，中间以空格分隔。例如：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("HTTP/1.1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("响应头")])]),t._v(" "),s("p",[t._v("响应头由键值对组成，每⾏⼀对，键值之间⽤英⽂冒号"),s("code",[t._v(":")]),t._v("进行分隔。例如：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Content-Length: 1024\nContent-Type: application/json\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("响应体")])]),t._v(" "),s("p",[t._v("服务器发送过来的数据。")]),t._v(" "),s("p",[t._v("小结:")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5793),alt:"image-20210306161216371"}})]),t._v(" "),s("h2",{attrs:{id:"_6-你了解的http状态码有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-你了解的http状态码有哪些"}},[t._v("#")]),t._v(" 6. 你了解的HTTP状态码有哪些？")]),t._v(" "),s("p",[s("strong",[t._v("成功（2XX）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("状态码")]),t._v(" "),s("th",[t._v("原因短语")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("200")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("表示从客户端发来的请求在服务器端被正确处理")])]),t._v(" "),s("tr",[s("td",[t._v("201")]),t._v(" "),s("td",[t._v("Created")]),t._v(" "),s("td",[t._v("请求已经被实现，⽽且有⼀个新的资源已经依据请求的需要⽽建⽴"),s("br"),t._v("通常是在POST请求，或是某些PUT请求之后创建了内容, 进行的返回的响应")])]),t._v(" "),s("tr",[s("td",[t._v("202")]),t._v(" "),s("td",[t._v("Accepted")]),t._v(" "),s("td",[t._v("请求服务器已接受，但是尚未处理，不保证完成请求"),s("br"),t._v("适合异步任务或者说需要处理时间比较长的请求，避免HTTP连接一直占用")])]),t._v(" "),s("tr",[s("td",[t._v("204")]),t._v(" "),s("td",[t._v("No content")]),t._v(" "),s("td",[t._v("表示请求成功，但响应报⽂不含实体的主体部分")])]),t._v(" "),s("tr",[s("td",[t._v("206")]),t._v(" "),s("td",[t._v("Partial Content")]),t._v(" "),s("td",[t._v("进⾏的是范围请求, 表示服务器已经成功处理了部分 GET 请求"),s("br"),t._v("响应头中会包含获取的内容范围 (常用于分段下载)")])])])]),t._v(" "),s("p",[s("strong",[t._v("重定向（3XX）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("状态码")]),t._v(" "),s("th",[t._v("原因短语")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("301")]),t._v(" "),s("td",[t._v("Moved Permanently")]),t._v(" "),s("td",[t._v("永久性重定向，表示资源已被分配了新的 URL"),s("br"),t._v("比如，我们访问 "),s("strong",[t._v("http")]),t._v("😕/www.baidu.com 会跳转到 "),s("strong",[t._v("https")]),t._v("😕/www.baidu.com")])]),t._v(" "),s("tr",[s("td",[t._v("302")]),t._v(" "),s("td",[t._v("Found")]),t._v(" "),s("td",[t._v("临时性重定向，表示资源临时被分配了新的 URL, 支持搜索引擎优化"),s("br"),t._v("首页, 个人中心, 遇到了需要登录才能操作的内容, 重定向 到 登录页")])]),t._v(" "),s("tr",[s("td",[t._v("303")]),t._v(" "),s("td",[t._v("See Other")]),t._v(" "),s("td",[t._v("对于POST请求，它表示请求已经被处理，客户端可以接着使用GET方法去请求Location里的URI。")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("304")])]),t._v(" "),s("td",[s("strong",[t._v("Not Modified")])]),t._v(" "),s("td",[s("strong",[t._v("自从上次请求后，请求的网页内容未修改过。"),s("br"),t._v("服务器返回此响应时，不会返回网页内容。(协商缓存)")])])]),t._v(" "),s("tr",[s("td",[t._v("307")]),t._v(" "),s("td",[t._v("Temporary Redirect")]),t._v(" "),s("td",[t._v("对于POST请求，表示请求还没有被处理，客户端应该向Location里的URI重新发起POST请求。"),s("br"),t._v("不对请求做额外处理, 正常发送请求, 请求location中的url地址")])])])]),t._v(" "),s("p",[t._v("因为post请求, 是非幂等的,  从302中, 细化出了 303 和 307")]),t._v(" "),s("p",[t._v("简而言之:")]),t._v(" "),s("ul",[s("li",[t._v("301  302  307  都是重定向")]),t._v(" "),s("li",[t._v("304 协商缓存")])]),t._v(" "),s("p",[s("strong",[t._v("客户端错误（4XX）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("状态码")]),t._v(" "),s("th",[t._v("原因短语")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("400")])]),t._v(" "),s("td",[s("strong",[t._v("Bad Request")])]),t._v(" "),s("td",[s("strong",[t._v("请求报⽂存在语法错误(（传参格式不正确）")])])]),t._v(" "),s("tr",[s("td",[t._v("401")]),t._v(" "),s("td",[t._v("UnAuthorized")]),t._v(" "),s("td",[t._v("权限认证未通过(没有权限)")])]),t._v(" "),s("tr",[s("td",[t._v("403")]),t._v(" "),s("td",[t._v("Forbidden")]),t._v(" "),s("td",[t._v("表示对请求资源的访问被服务器拒绝")])]),t._v(" "),s("tr",[s("td",[t._v("404")]),t._v(" "),s("td",[t._v("Not Found")]),t._v(" "),s("td",[t._v("表示在服务器上没有找到请求的资源")])]),t._v(" "),s("tr",[s("td",[t._v("408")]),t._v(" "),s("td",[t._v("Request Timeout")]),t._v(" "),s("td",[t._v("客户端请求超时")])]),t._v(" "),s("tr",[s("td",[t._v("409")]),t._v(" "),s("td",[t._v("Confict")]),t._v(" "),s("td",[t._v("请求的资源可能引起冲突")])])])]),t._v(" "),s("p",[s("strong",[t._v("服务端错误（5XX）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("状态码")]),t._v(" "),s("th",[t._v("原因短语")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("500")]),t._v(" "),s("td",[t._v("Internal Sever Error")]),t._v(" "),s("td",[t._v("表示服务器端在执⾏请求时发⽣了错误")])]),t._v(" "),s("tr",[s("td",[t._v("501")]),t._v(" "),s("td",[t._v("Not Implemented")]),t._v(" "),s("td",[t._v("请求超出服务器能⼒范围，例如服务器不⽀持当前请求所需要的某个功能，"),s("br"),t._v("或者请求是服务器不⽀持的某个⽅法")])]),t._v(" "),s("tr",[s("td",[t._v("503")]),t._v(" "),s("td",[t._v("Service Unavailable")]),t._v(" "),s("td",[t._v("表明服务器暂时处于超负载或正在停机维护，⽆法处理请求")])]),t._v(" "),s("tr",[s("td",[t._v("505")]),t._v(" "),s("td",[t._v("Http Version Not Supported")]),t._v(" "),s("td",[t._v("服务器不⽀持，或者拒绝⽀持在请求中使⽤的 HTTP 版本")])])])]),t._v(" "),s("p",[t._v("问到状态码: 304   400  401??")]),t._v(" "),s("p",[t._v("当前端看到控制台报出 400 时, 请问一定是后台的问题么? 如何排查错误? (前端先检查传参格式是否有误)")]),t._v(" "),s("h2",{attrs:{id:"_7-http1-x-的-keep-alive-是什么作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-http1-x-的-keep-alive-是什么作用"}},[t._v("#")]),t._v(" 7. HTTP1.x 的 keep-alive 是什么作用？")]),t._v(" "),s("p",[t._v("作用：使客户端到服务器端的连接"),s("strong",[t._v("持续有效")]),t._v("(长连接)，当出现对服务器的后继请求时，")]),t._v(" "),s("p",[t._v("Keep-Alive功能避免了建立或者重新建立连接。")]),t._v(" "),s("p",[t._v("早期 HTTP/1.0 在每次请求的时候，都要创建⼀个新的连接，⽽创建连接的过程需要消耗资源和时间，")]),t._v(" "),s("p",[t._v("为了减少资源消耗、缩短响应时间，就需要复⽤已有连接。")]),t._v(" "),s("p",[t._v("在后来的 HTTP/1.0 以及 HTTP/1.1 中引⼊了复⽤连接的机制，也就是在请求头中加⼊Connection: keep-alive，")]),t._v(" "),s("p",[t._v("以此告诉对⽅这个请求响应完成后不要关闭连接，下⼀次还⽤这个请求的连接进行后续交流。")]),t._v(" "),s("p",[s("strong",[t._v("协议规定，如果想要保持连接，则需要在请求头中加上 Connection: keep-alive。")])]),t._v(" "),s("p",[s("strong",[t._v("keep-alive 的优点")]),t._v(" (复用连接)")]),t._v(" "),s("ul",[s("li",[t._v("较少的 CPU 和内存的占⽤（因为要打开的连接数变少了, 复用了连接）")]),t._v(" "),s("li",[t._v("减少了后续请求的延迟（⽆需再进⾏握⼿）")]),t._v(" "),s("li",[t._v("...")])]),t._v(" "),s("p",[t._v("缺点: 因为在处理的暂停期间，本来可以释放的资源仍旧被占用。请求已经都结束了, 但是还一直连接着也不合适")]),t._v(" "),s("p",[t._v("解决：Keep-Alive: timeout=5, max=100")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("timeout：过期时间5秒（对应httpd.conf里的参数是：KeepAliveTimeout），")])]),t._v(" "),s("li",[s("p",[t._v("max是最多一百次请求，强制断掉连接。")]),t._v(" "),s("p",[t._v("就是在timeout时间内又有新的连接过来，同时max会自动减1，直到为0，强制断掉。")])])]),t._v(" "),s("h2",{attrs:{id:"_8-为什么需要https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-为什么需要https"}},[t._v("#")]),t._v(" 8. 为什么需要HTTPS？")]),t._v(" "),s("p",[t._v("HTTP协议是网络通信的基石, 基于HTTP协议, 完成了很多的网页应用功能, 但是HTTP协议是明文传输数据的! 太不安全了!")]),t._v(" "),s("p",[t._v("HTTPS 是安全版的 HTTP。")]),t._v(" "),s("p",[t._v("HTTP 协议在传输数据时采用的是明⽂方式传递，因此，⼀些敏感信息的传输就变得很不安全。")]),t._v(" "),s("p",[t._v("而 HTTPS 就是为了解决 HTTP 的不安全⽽产⽣的。")]),t._v(" "),s("h2",{attrs:{id:"_9-https是如何保证安全的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-https是如何保证安全的"}},[t._v("#")]),t._v(" 9. HTTPS是如何保证安全的？")]),t._v(" "),s("p",[t._v("HTTPS 在传输数据的过程中会对数据进行加密处理，保证安全性。")]),t._v(" "),s("p",[t._v("那HTTPS采用的什么样的加密方式呢？我们来了解下一些加密的基本概念。")]),t._v(" "),s("p",[t._v("目前常见的加密算法可以分成三类，"),s("code",[t._v("对称加密算法")]),t._v("，"),s("code",[t._v("非对称加密算法")]),t._v(" 和 "),s("code",[t._v("Hash算法")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("对称加密算法: 相同密钥加密解密,  可逆的! 可以用于加密解密传输数据")]),t._v(" "),s("p",[t._v("想使用对称加密算法, 一定要保证密钥不被泄漏  (且进行密钥的传输约定时, 一定要保证安全)")])]),t._v(" "),s("li",[s("p",[t._v("非对称加密算法: 有两把钥匙, 公钥, 私钥,  可逆的, 可以用于 https 的初步交换密钥")])]),t._v(" "),s("li",[s("p",[t._v("Hash算法: 不可逆的,  根据一段内容, 生成一段唯一标识, 一般用于验证数据是否被修改!   (md5)")])])]),t._v(" "),s("h3",{attrs:{id:"_9-1-什么是对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-什么是对称加密"}},[t._v("#")]),t._v(" 9.1 "),s("strong",[t._v("什么是对称加密？")])]),t._v(" "),s("p",[t._v("对称加密的特点是文件加密和解密使用相同的密钥，即加密密钥也可以用作解密密钥，")]),t._v(" "),s("p",[t._v("这种方法在密码学中叫做对称加密算法，对称加密算法使用起来简单快捷，密钥较短，且破译困难")]),t._v(" "),s("p",[t._v("**通信的双⽅都使⽤同⼀个秘钥进⾏加密, 解密。**⽐如，两个人事先约定的暗号，就属于对称加密。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5794),alt:"image-20210306005550796"}})]),t._v(" "),s("p",[t._v("对称加密的特点是：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("优点:")]),t._v(" "),s("p",[t._v("计算量小、加密速度快、加密效率高。")])]),t._v(" "),s("li",[s("p",[t._v("缺点:")]),t._v(" "),s("p",[s("strong",[t._v("在数据传送前，发送方和接收方必须商定好秘钥，然后双方保存好秘钥。")])]),t._v(" "),s("p",[s("strong",[t._v("如果一方的秘钥被泄露，那么加密信息也就不安全了")])]),t._v(" "),s("p",[t._v("最不安全的地方, 就在于第一开始, 互相约定密钥的时候!!! 传递密钥!")])])]),t._v(" "),s("p",[t._v("使用场景：本地数据加密、https通信、网络传输等")]),t._v(" "),s("p",[t._v("常见算法：AES、DES、3DES、DESX、Blowfish、IDEA、RC4、RC5、RC6  (全球公开, 通过了层层筛选, 层层检验)  没有被破解")]),t._v(" "),s("p",[t._v("全球有专门做算法设计的加密算法设计师, 但经过公开检验的算法才是安全的 (很多公开的算法, 虽然可以用撞库的方式破解, 但是尝试破解的成本会非常高 (甚至几百年))")]),t._v(" "),s("h3",{attrs:{id:"_9-2-什么是非对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-什么是非对称加密"}},[t._v("#")]),t._v(" 9.2 "),s("strong",[t._v("什么是⾮对称加密？")])]),t._v(" "),s("p",[t._v("而加密和解密其实可以使用不同的规则，只要这两种规则之间存在某种对应关系即可，")]),t._v(" "),s("p",[t._v('这样就避免了直接传递之前的相同的密钥。这种新的加密模式被称为"非对称加密算法"。')]),t._v(" "),s("p",[t._v("通信的双方使用不同的秘钥进行加密解密，即秘钥对（私钥 + 公钥）。")]),t._v(" "),s("p",[t._v("特征: 私钥可以解密公钥加密的内容,  公钥可以解密私钥加密的内容")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5795),alt:"image-20210306011528361"}})]),t._v(" "),s("p",[t._v("非对称加密的特点是：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("优点：非对称加密与对称加密相比其安全性更好")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("缺点：加密和解密花费时间长、速度慢，只适合对少量数据进行加密。")])])])]),t._v(" "),s("p",[t._v("使用场景：https会话前期、CA数字证书、信息加密、登录认证等")]),t._v(" "),s("p",[t._v("常见算法：RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）")]),t._v(" "),s("h3",{attrs:{id:"_9-3-https-加密解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-https-加密解决方案"}},[t._v("#")]),t._v(" 9.3 "),s("strong",[t._v("HTTPS 加密解决⽅案")])]),t._v(" "),s("p",[t._v("结合了两种加密⽅式：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将 "),s("code",[t._v("对称加密的密钥(一串约定的字符串)")]),t._v(" ⽤非对称加密的公钥, 进⾏加密并发送出去，接收⽅使⽤私钥解密得到 "),s("code",[t._v("对称加密密钥")])])]),t._v(" "),s("li",[s("p",[t._v("双⽅沟通时使⽤ "),s("code",[t._v("对称加密密钥")]),t._v(" 进⾏")])])]),t._v(" "),s("p",[s("strong",[t._v("可以看到，只有在发送秘钥阶段才使用非对称加密，而后续的通信都使用对称加密，这样解决了性能问题。")])]),t._v(" "),s("p",[t._v("HTTPS 目前所使用的 TLS或SSL协议,  就是目前采用的加密通道的规范协议")]),t._v(" "),s("p",[t._v("它利用对称加密、(公私钥)非对称加密, 以及其密钥交换算法，可完成可信任的信息传输")]),t._v(" "),s("ol",[s("li",[t._v("利用 非对称加密 加密传输 对称加密所约定的密钥  (保证了密钥传输的安全)")]),t._v(" "),s("li",[t._v("后续, 利用对称加密, 有效便捷的进行数据传输!!")])]),t._v(" "),s("h3",{attrs:{id:"_9-4-数字证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-数字证书"}},[t._v("#")]),t._v(" 9.4 数字证书")]),t._v(" "),s("p",[t._v("为了安全性, 一般还需要签发数字证书!")]),t._v(" "),s("p",[t._v("客户端 和 服务器端要初步互通消息时,  客户端发送请求可以拿到公开的公钥信息")]),t._v(" "),s("p",[t._v("进而进行非对称加密, 使用公钥, 加密"),s("code",[t._v("对称加密密钥")]),t._v(", 传递给服务器, 后续通信都使用对称加密!")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5796),alt:"image-20210308102015595"}})]),t._v(" "),s("p",[s("strong",[t._v("问题是: 初步互通消息时, 如果请求拿到的公钥信息, 就是假的, 或者不安全的! 那么后续的所有操作, 都将是不安全的!")])]),t._v(" "),s("p",[t._v("如何保证公钥的安全性呢??  说白了, 需要证明公钥是安全可靠的!!! 要证明网站是安全可靠的!!!")]),t._v(" "),s("p",[t._v("所以, 就需要有数字证书(CA证书),  一般是CA机构(互联网的机构,  登记网站和公钥的)颁发的, 证明这个公钥是安全可靠的!")]),t._v(" "),s("p",[s("strong",[t._v("CA证书中心会对你网站的公钥, 网站的域名地址,  证书到期时间, 等一些相关信息一起加密签发数字证书, 保证你网站的安全性")])]),t._v(" "),s("p",[s("img",{attrs:{src:v(5797),alt:"image-20210306014409595"}})]),t._v(" "),s("p",[t._v("当公司申请了 CA 证书后, 就应该在响应时, 将数字证书一起发送给客户端")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5798),alt:"image-20210306021013686"}})]),t._v(" "),s("p",[t._v("而客户端, 接收到消息后, 就可以查看证书 , 权威CA机构都可以")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果正在访问的网站 和 证书记载的网址 不一致, 说明不安全,  可能被冒用, 浏览器就会发出警告!!!")])]),t._v(" "),s("li",[s("p",[t._v("如果签发证书的机构, 不权威, 发出警告")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5799),alt:"image-20210306021532010"}})])]),t._v(" "),s("li",[s("p",[t._v("如果证书过期了, 浏览器也会发出警告")]),t._v(" "),s("p",[t._v("因为一旦证书过期了, CA机构, 不会继续实时检测网站的安全有效性!")])])]),t._v(" "),s("h3",{attrs:{id:"_9-5-数字签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-数字签名"}},[t._v("#")]),t._v(" 9.5 数字签名")]),t._v(" "),s("p",[t._v("但这还是有问题：如果证书被篡改了怎么办?")]),t._v(" "),s("p",[t._v("这时就需要用⼀个技术："),s("strong",[t._v("数字签名")]),t._v("。 (根据证书内容, 生成的一个唯一标识)")]),t._v(" "),s("p",[t._v("数字签名就是先⽤ "),s("strong",[t._v("CA ⾃带的 Hash 算法来计算出证书内容的⼀个摘要")]),t._v("，然后使⽤ CA 私钥进行加密，组成数字签名。")]),t._v(" "),s("p",[t._v("当别⼈把他的证书发过来时，"),s("strong",[t._v("接收方⽤同样的算法再次⽣成摘要")]),t._v("，⽤ CA 公钥解密后得到CA生成的摘要，两者进行对⽐后,")]),t._v(" "),s("p",[t._v("就能确定中间是否被⼈篡改。这样就能最⼤程度的保证通信的安全了。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/u014044812/article/details/80723009",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客参考"),s("OutboundLink")],1)]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("简要小结:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("为什么需要 HTTPS ? 因为HTTP是明文传输数据的, 不安全, 而 HTTPS 是会对内容加密的")])]),t._v(" "),s("li",[s("p",[t._v("HTTPS 的加密策略是什么 ?")]),t._v(" "),s("p",[t._v("先用 "),s("code",[t._v("非对称加密")]),t._v(", 传递对称加密的密钥   (保证了密钥传输的安全)")]),t._v(" "),s("p",[t._v("后续 使用"),s("code",[t._v("对称加密")]),t._v(", 进行交流  (保证了传输数据安全)")])]),t._v(" "),s("li",[s("p",[t._v("问题: 就算是第一次交流用非对称加密,  公钥也是要在网络中传输的!")]),t._v(" "),s("p",[t._v("如何证明公钥是可靠的? 如何证明网站是可靠的 ?    (CA机构认证, 网站需要申请  "),s("strong",[s("code",[t._v("数字证书")])]),t._v("  )")]),t._v(" "),s("p",[t._v("请求时, 网站就会将数字证书给到浏览器, 浏览器默认就会检测证书的可靠性!")]),t._v(" "),s("p",[t._v("(1) 是否是权威机构发布的!")]),t._v(" "),s("p",[t._v("(2) 看证书中记录的地址 和 当前访问的网站的地址, 是否一致, 只有一致, 才可靠!")]),t._v(" "),s("p",[t._v("(3) 看证书是否过期")]),t._v(" "),s("p",[t._v("...")])]),t._v(" "),s("li",[s("p",[t._v("如何保证证书不被篡改 => "),s("strong",[s("code",[t._v("数字签名")])]),t._v(",  可以根据证书的所有的内容, 生成一个唯一标识!!! ("),s("code",[t._v("Hash加密算法")]),t._v(")")]),t._v(" "),s("p",[t._v("一旦内容如果被修改了, 再次生成唯一标识时,  和之前生成的唯一标识就不一样!  检测是否被修改!")])])]),t._v(" "),s("h2",{attrs:{id:"_10-http-2-和-http1-x-比-有什么优势和特点-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-http-2-和-http1-x-比-有什么优势和特点-了解"}},[t._v("#")]),t._v(" 10. HTTP/2 和 HTTP1.x 比，有什么优势和特点？(了解)")]),t._v(" "),s("p",[s("strong",[t._v("HTTP/2 的升级, 对于用户来说, 是跨时代的!  基于HTTP/2, 用户访问网页的速度会非常快!!! (充分利用带宽)")])]),t._v(" "),s("p",[t._v("HTTP/2: 淘宝, 天猫, 京东等, 已做升级 ....")]),t._v(" "),s("ol",[s("li",[t._v("HTTP/2 采⽤"),s("code",[t._v("⼆进制格式")]),t._v("来传输数据，⽽⾮ HTTP 1.x 的⽂本格式，⼆进制协议"),s("code",[t._v("解析起来更⾼效")])]),t._v(" "),s("li",[t._v("HTTP/2 采用一些"),s("code",[t._v("头部压缩技术")]),t._v("，减少在请求和响应头中重复携带的数据，"),s("code",[t._v("降低网络负担")])]),t._v(" "),s("li",[t._v("HTTP/2 采⽤"),s("code",[t._v("服务器推送")]),t._v("方式，主动向客户端推送资源，提高页面加载效率")]),t._v(" "),s("li",[s("strong",[t._v("HTTP/2 采⽤"),s("code",[t._v("多路复用机制")]),t._v("，减少需要创建的连接数量，降低资源占用和性能消耗")])])]),t._v(" "),s("p",[t._v("下面是一些与之关联的技术知识。")]),t._v(" "),s("p",[s("strong",[t._v("⼆进制格式分帧")])]),t._v(" "),s("p",[t._v("帧：HTTP/2 数据通信的最⼩单位消息，是指 HTTP/2 中逻辑上的 HTTP 消息（例如请求、响应等）。消息由⼀个或多个帧组成")]),t._v(" "),s("p",[t._v("流：存在于连接中的⼀个虚拟通道，它可以承载双向消息，且每个流都有唯⼀的整数ID")]),t._v(" "),s("p",[s("strong",[t._v("头部压缩")])]),t._v(" "),s("p",[t._v("在 HTTP1.x 中，请求和响应中会重复携带一些不常改变、冗⻓的头数据，给⽹络带来额外负担。")]),t._v(" "),s("p",[t._v("在 HTTP/2 中，客户端和服务端使⽤ "),s("strong",[t._v("“⾸部表”")]),t._v(" 来跟踪和存储之前发送过的键值对，")]),t._v(" "),s("p",[t._v("相同的数据不再随着每次请求和响应发送。⾸部表在连接存续期间始终存在，由客户端和服务器共同渐进更新。")]),t._v(" "),s("p",[t._v("每个新的⾸部键值对，要么被追加到当前表的末尾，要么替换表中已存在的键值对。")]),t._v(" "),s("blockquote",[s("p",[t._v("可以简单的理解为：只发送差异数据，⽽不是全部发送，从⽽减少头部的信息量")])]),t._v(" "),s("p",[t._v("下图为首部表的更新示意图：")]),t._v(" "),s("img",{staticStyle:{zoom:"30%"},attrs:{src:v(5800),alt:"image-20210219160534616"}}),t._v(" "),s("p",[s("strong",[t._v("服务器推送")])]),t._v(" "),s("p",[t._v("服务端可以在发送⻚⾯ HTML 内容时，再主动推送一些其它资源，⽽不⽤等到浏览器解析到相应的位置时发起请求后再作响应。")]),t._v(" "),s("p",[t._v("例如，服务端可以主动把 JS 和 CSS ⽂件推送给客户端，⽽不需要客户端解析 HTML 时再发送这些请求。")]),t._v(" "),s("p",[t._v("不过，服务端的主动推送行为，客户端有权利选择是否要接收。")]),t._v(" "),s("p",[t._v("如果服务端推送的资源已经被浏览器缓存过，浏览器可以通过发送 RST_STREAM 帧来拒收。")]),t._v(" "),s("p",[s("strong",[t._v("多路复用")])]),t._v(" "),s("p",[t._v("在 HTTP 1.x 中如果想并发多个请求的话，必须使⽤多个 TCP 链接，但浏览器为了控制资源，")]),t._v(" "),s("p",[t._v("会对单个域名有 6-8 个 TCP 链接的数量限制。而在 HTTP/2 中：")]),t._v(" "),s("ul",[s("li",[t._v("同域名下的所有通信，都在单个连接上完成")]),t._v(" "),s("li",[t._v("单个连接可以承载任意数量的双向数据流")]),t._v(" "),s("li",[t._v("数据流以消息的形式发送，⽽消息⼜由⼀个或多个帧组成（多个帧可以乱序发送，因为可以根据帧⾸部的流标识来重新组装）")])]),t._v(" "),s("p",[s("img",{attrs:{src:v(5801),alt:"image-20210306023912779"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/30166894",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章：HTTP/2特性及其在实际应用中的表现"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("小结:")])]),t._v(" "),s("p",[s("strong",[t._v("HTTP1.X 同一时间, 只能并发建立 6-8 个 TCP 连接, 一个连接同时只能一个请求  (虽然可以 keep-alive复用, 但也得一个个来)")])]),t._v(" "),s("p",[s("strong",[t._v("(建立连接的成本比较高, 不让一次性建立太多连接)")])]),t._v(" "),s("p",[s("strong",[t._v("而新版本 HTTP/2 建立一次连接, 就可以并发很多个请求!")])]),t._v(" "),s("p",[t._v("所以 HTTP/2 的升级, 大大提升了页面加载的效率!")]),t._v(" "),s("h2",{attrs:{id:"_11-http缓存控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-http缓存控制"}},[t._v("#")]),t._v(" 11. http缓存控制")]),t._v(" "),s("h3",{attrs:{id:"_11-1-基本认知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-基本认知"}},[t._v("#")]),t._v(" 11.1 基本认知")]),t._v(" "),s("p",[s("strong",[t._v("Web 服务缓存")]),t._v(" 大致可以分为：数据库缓存、服务器端缓存（代理服务器缓存、CDN 服务器缓存）、浏览器缓存。")]),t._v(" "),s("p",[s("strong",[t._v("浏览器缓存")]),t._v(" 也包含很多内容： HTTP 缓存、indexDB、cookie、localstorage 等等。"),s("strong",[s("code",[t._v("这里我们只讨论 HTTP 缓存相关内容")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("HTTP缓存")]),t._v(":  (优化页面加载的效率, 如果没有缓存策略, 每次重新加载页面, 会非常慢!)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("强缓存")])]),t._v(" "),s("li",[s("strong",[t._v("协商缓存")])])]),t._v(" "),s("p",[t._v("在具体了解 HTTP 缓存之前先来明确几个术语：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("缓存命中率：从缓存中得到数据的请求数  与    所有请求数的比率。理想状态是越高越好。")]),t._v(" "),s("p",[t._v("(看所有的请求中, 多少从缓存中读的)")])]),t._v(" "),s("li",[s("p",[t._v("过期内容：超过设置的有效时间，被标记为“陈旧”的内容。")])]),t._v(" "),s("li",[s("p",[t._v("验证：验证缓存中的过期内容是否仍然有效，验证通过的话刷新过期时间。")])]),t._v(" "),s("li",[s("p",[t._v("失效：失效就是把内容从缓存中移除。")])])]),t._v(" "),s("p",[s("strong",[t._v("浏览器缓存主要是 HTTP 协议定义的缓存机制。")])]),t._v(" "),s("p",[s("strong",[t._v("浏览器缓存, HTTP缓存分类")])]),t._v(" "),s("p",[t._v("浏览器缓存分为"),s("code",[t._v("强缓存")]),t._v("和 "),s("code",[t._v("协商缓存")]),t._v("，浏览器加载一个页面的简单流程如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器先根据这个资源的  "),s("strong",[t._v("http头信息")]),t._v("  来 "),s("strong",[t._v("判断是否命中强缓存")]),t._v("。")]),t._v(" "),s("p",[t._v("如果命中则直接加载在缓存中的资源，并不会将请求发送到服务器。（强缓存）")])]),t._v(" "),s("li",[s("p",[t._v("如果未命中强缓存，则浏览器会将资源加载请求发送到服务器。")]),t._v(" "),s("p",[t._v("服务器来判断浏览器本地缓存是否失效。")]),t._v(" "),s("p",[t._v("若可以使用，则服务器并不会返回资源信息，浏览器继续从缓存加载资源。（协商缓存）")])]),t._v(" "),s("li",[s("p",[t._v("如果未命中协商缓存，则服务器会将完整的资源返回给浏览器，浏览器加载新资源，并更新缓存。（新的请求）")])])]),t._v(" "),s("h3",{attrs:{id:"_11-2-强缓存-验证缓存是否过期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-强缓存-验证缓存是否过期"}},[t._v("#")]),t._v(" 11.2 强缓存  (验证缓存是否过期)")]),t._v(" "),s("p",[s("strong",[t._v("(进行判断缓存是否有效,  就是判断资源是否过期, 如果未过期, 直接用缓存)")])]),t._v(" "),s("p",[s("strong",[t._v("强缓存")])]),t._v(" "),s("p",[t._v("命中强缓存时，浏览器并不会将请求发送给服务器。")]),t._v(" "),s("p",[t._v("在Chrome的开发者工具中看到http的返回码是200，但是在Size列会显示为(from cache)。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5802),alt:"img"}})]),t._v(" "),s("p",[t._v("强缓存是利用http的返回的响应头中的Expires或者Cache-Control (优先级更高) 两个字段来控制的，用来表示资源的缓存时间。")]),t._v(" "),s("p",[t._v("Expires: 指定一个具体时间(2020年12月12日 17:00), 到了这个时间了, 缓存过期了, 在时间内, 都是有效的, 可以直接读")]),t._v(" "),s("p",[t._v("Cache-Control : 指定一个过期时间 (3600s), 这个资源你加载到后, 可以用 3600s")]),t._v(" "),s("p",[s("strong",[t._v("Expires")])]),t._v(" "),s("p",[t._v("缓存过期时间，用来指定资源到期的时间，是服务器端的具体的时间点。也就是说，Expires=max-age + 请求时间，需要和Last-modified结合使用。但在上面我们提到过，cache-control的优先级更高。")]),t._v(" "),s("p",[t._v("Expires是Web服务器响应消息头字段，在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，而无需再次请求。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5803),alt:"image-20210308182724715"}})]),t._v(" "),s("p",[t._v("该字段会返回一个时间，比如Expires:  Wed, 23 Nov 2050 16:00:01 GMT 。这个时间代表着这个资源的失效时间，也就是说在xx年xx月xx日时间之前都是有效的，即命中缓存。")]),t._v(" "),s("p",[t._v("这种方式有一个明显的缺点，由于失效时间是一个"),s("code",[t._v("绝对时间")]),t._v("，所以当 "),s("strong",[t._v("服务器与客户端 时间偏差很大")]),t._v("  以后，就会导致缓存混乱。于是发展出了Cache-Control。")]),t._v(" "),s("p",[s("strong",[t._v("Cache-Control")])]),t._v(" "),s("p",[t._v("Cache-Control是一个"),s("code",[t._v("相对时间")]),t._v("，例如Cache-Control:max-age 3600，代表着资源的有效期是3600秒。")]),t._v(" "),s("p",[t._v("由于是相对时间，并且都是与客户端时间比较，所以服务器与客户端时间偏差也不会导致问题。")]),t._v(" "),s("p",[t._v("Cache-Control与Expires可以在服务端配置同时启用或者启用任意一个，同时启用的时候Cache-Control优先级高。")]),t._v(" "),s("p",[t._v("Cache-Control 可以由多个字段组合而成，主要有以下几个取值：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("max-age")]),t._v(" 指定一个时间长度，在这个时间段内缓存是有效的，单位是s。")]),t._v(" "),s("p",[t._v("例如设置 Cache-Control:max-age=31536000，也就是说缓存有效期为（31536000 / 24 / 60 / 60）天，")]),t._v(" "),s("p",[t._v("第一次访问这个资源的时候，服务器端也返回了 Expires 字段，并且过期时间是一年后。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5804),alt:"image-20210308182737673"}})]),t._v(" "),s("p",[t._v("在没有禁用缓存并且没有超过有效时间的情况下，再次访问这个资源就命中了缓存，不会向服务器请求资源而是直接从浏览器缓存中取。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("no-cache")]),t._v(" 强制所有缓存了该响应的用户，在使用已缓存的数据前，发送带验证的请求到服务器, 问服务器是否可以读缓存。")]),t._v(" "),s("p",[t._v("不是字面意思上的不缓存。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("no-store")]),t._v(" 禁止缓存，每次请求都要向服务器重新获取数据。")])])]),t._v(" "),s("p",[t._v("注意: 如果命中强缓存,  在有效期内, 使用了本地浏览器的缓存,  请求该资源是不会向服务器发送请求的! (大大减轻了服务器压力)")]),t._v(" "),s("h3",{attrs:{id:"_11-3-协商缓存-强缓存未命中-发送请求进行协商"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-协商缓存-强缓存未命中-发送请求进行协商"}},[t._v("#")]),t._v(" 11.3 协商缓存 (强缓存未命中-发送请求进行协商)")]),t._v(" "),s("p",[t._v("看看过期时间, 食品没过期, 直接吃 (直接读缓存, 不发请求)    命中强缓存!")]),t._v(" "),s("p",[t._v("食品过期时间过了,  能不能吃呢?  问问专家(服务器),  专家瞅了一眼,  还能吃, 不会死人, 重新标了个过期时间(有科学依据)")]),t._v(" "),s("p",[t._v("(响应304, 不返回内容) , 可以用 (协商缓存)")]),t._v(" "),s("p",[t._v("如果问过专家(服务器), 专家瞅了一眼, 呀真不能用了, 原来的不要了, 我重新给你发一个 (响应200, 并返回内容)")]),t._v(" "),s("p",[s("strong",[t._v("协商缓存")])]),t._v(" "),s("p",[t._v("若未命中强缓存(强缓存过期了)，则浏览器会将请求发送至服务器。")]),t._v(" "),s("p",[t._v("服务器根据http头信息中的"),s("code",[t._v("Last-Modify/If-Modify-Since")]),t._v("或"),s("code",[t._v("Etag/If-None-Match")]),t._v("来判断是否命中协商缓存。")]),t._v(" "),s("p",[t._v("如果命中，则http返回码为304 (你本地之前加载的资源是有效的)，浏览器从缓存中加载资源。")]),t._v(" "),s("p",[s("strong",[t._v("Last-Modify/If-Modify-Since")])]),t._v(" "),s("p",[t._v("浏览器第一次请求一个资源的时候, 服务器返回的header中会加上Last-Modify，")]),t._v(" "),s("p",[t._v("Last-modify是一个时间标识该资源的"),s("strong",[t._v("最后修改时间")]),t._v("，例如"),s("code",[t._v("Last-Modify: Thu,31 Dec 2037 23:59:59 GMT")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5805),alt:"image-20210308182821236"}})]),t._v(" "),s("p",[t._v("当浏览器再次请求该资源时(进行协商请求时)，发送的请求头中会包含If-Modify-Since，"),s("strong",[t._v("该值为缓存之前返回的Last-Modify")]),t._v("。")]),t._v(" "),s("p",[t._v("服务器收到If-Modify-Since后，根据实际服务器的资源的最后修改时间, 进行判断是否命中缓存。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5806),alt:"img"}})]),t._v(" "),s("p",[t._v("如果命中缓存，则返回 "),s("strong",[t._v("http304")]),t._v("，并且不会返回资源内容，并且不会返回Last-Modify。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5807),alt:"image-20210308123308326"}})]),t._v(" "),s("p",[t._v("由于对比的是"),s("strong",[t._v("服务端的修改时间")]),t._v("，所以就算客户端与服务端时间差距,  也不会有问题。")]),t._v(" "),s("p",[s("strong",[t._v("但是有时候通过最后修改时间来判断资源是否修改还是不太准确（资源变化了最后修改时间也可以一致）。")])]),t._v(" "),s("p",[t._v("比如: 最后修改只能精确到秒级, 一秒进行了多次修改, 就不行了,  "),s("strong",[t._v("于是出现了ETag/If-None-Match。")])]),t._v(" "),s("p",[s("strong",[t._v("ETag/If-None-Match")])]),t._v(" "),s("p",[t._v("与Last-Modify/If-Modify-Since (最后修改时间)不同的是，Etag/If-None-Match返回的是一个校验码（ETag: entity tag）。")]),t._v(" "),s("p",[t._v("ETag可以保证每一个资源是唯一的，资源变化都会导致ETag变化。")]),t._v(" "),s("p",[t._v("ETag值的变更则说明资源状态已经被修改。")]),t._v(" "),s("p",[t._v("服务器根据浏览器上发送的If-None-Match值来判断是否命中缓存。")]),t._v(" "),s("p",[s("img",{attrs:{src:v(5808),alt:"image-20210308182858733"}})]),t._v(" "),s("p",[t._v("ETag生成靠以下几种因子")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("文件的i-node编号，是Linux/Unix用来识别文件的编号。")])]),t._v(" "),s("li",[s("p",[t._v("文件最后修改时间")])]),t._v(" "),s("li",[s("p",[t._v("文件大小")]),t._v(" "),s("p",[t._v("...")])])]),t._v(" "),s("p",[s("strong",[t._v("生成Etag的时候，可以使用其中一种或几种因子，使用抗碰撞散列函数来生成。生成一个标记文件的唯一值")])]),t._v(" "),s("p",[s("strong",[t._v("既生 Last-Modified 何生 Etag ？")])]),t._v(" "),s("p",[t._v("你可能会觉得使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，为什么还需要Etag（实体标识）呢？")]),t._v(" "),s("p",[t._v("Etag的出现主要是为了解决几个Last-Modified比较难解决的问题：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Last-Modified标注的最后修改只能精确到秒级")]),t._v(" "),s("p",[t._v("如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间")])]),t._v(" "),s("li",[s("p",[t._v("有可能存在服务器没有准确获取文件修改时间，或者与代理服务器时间不一致等情形")])])]),t._v(" "),s("p",[t._v("Etag是服务器自动生成或者由开发者生成的对应资源在服务器端的唯一标识符，能够更加 "),s("strong",[t._v("准确的控制缓存。")])]),t._v(" "),s("p",[t._v("不会仅仅只根据最后的修改时间判断是否进行使用缓存")]),t._v(" "),s("p",[t._v("Last-Modified与ETag是可以一起使用的，服务器会优先验证ETag，一致的情况下，才会继续比对Last-Modified，")]),t._v(" "),s("p",[t._v("最后才决定是否返回304。")]),t._v(" "),s("p",[t._v("小结:")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("强缓存:")]),t._v(" 检查过期时间, 判断缓存是否失效,  如果不失效, 直接用, 不发请求")]),t._v(" "),s("p",[t._v("大大的减少了 服务器的请求次数, 在过期时间内, 直接从客户端内存中读")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("协商缓存")]),t._v(": 强缓存命中失效了, 超过过期时间了, 拿着标识(最后的修改时间,  唯一标识etag), 去问服务器, 是否真的过期了")]),t._v(" "),s("p",[t._v("如果验证通过,  服务器会直接响应 304, 且不会返回资源")])])]),t._v(" "),s("p",[t._v("不太会变的资源 => 图片, 非常的适合应用强缓存 (过期时间也可以设置的很长)")]),t._v(" "),s("p",[t._v("如果是一些很可能会变的资源, 也希望能缓存 => 过期时间设置短一些,  一旦过期, 协商缓存")]),t._v(" "),s("p",[t._v("实际工作两者相互配合")]),t._v(" "),s("h3",{attrs:{id:"_11-4-整体请求缓存流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-整体请求缓存流程"}},[t._v("#")]),t._v(" 11.4 整体请求缓存流程")]),t._v(" "),s("p",[s("strong",[t._v("浏览器第一次请求")])]),t._v(" "),s("p",[s("img",{attrs:{src:v(5809),alt:"image-20210308182913833"}})]),t._v(" "),s("p",[s("strong",[t._v("浏览器第二次请求")])]),t._v(" "),s("p",[s("img",{attrs:{src:v(5810),alt:"image-20210308182925144"}})]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 为什么需要 https")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    因为 HTTP 协议明文传输数据, 太不安全")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    利用 HTTPS 协议可以更安全, 在HTTP基础上进行加密")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. https又是如何保证安全?")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    底层实际是 对称加密 和 非对称加密配合, 实现加密数据传输")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (1) 使用非对称加密, 加密对称加密的密钥, 进行密钥的交换")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (2) 后续就使用对称加密进行数据传输")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 如何保证你访问的网站是安全的? 如何保证你浏览器第一次请求某个网站拿到的公钥是安全的?")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    CA证书 => 数字证书, 由权威CA机构, 申请统一发布的!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    证书中, 就会包含公钥, 网站信息, 网站用途, 证书过期时间...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    在浏览器第一次请求某个网站时, 就会将证书响应! 浏览会自动存证书, 并做证书校验")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (1) 看证书是否过期")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (2) 看证书中的网址 和 你正在访问的网址是否匹配")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (3) 看发布证书的机构是否权威")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    ...")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 万一证书被篡改了怎么办? => 数字签名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    会根据证书生成时的内容, 会生成一个唯一标识")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    后续拿到证书时, 只需要用相同的hash算法, 生成一个唯一标识")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    如果校验唯一标识, 一致的, 说明没有改过")]),t._v("\n\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 谈谈你对缓存的理解 ?")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    http缓存: 强缓存, 协商缓存 两个相互配合实现 缓存处理")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    强缓存: 对于缓存的资源, 会根据过期时间判断, 如果未过期, 直接用 (不发请求)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//           只有过期了, 才会发请求")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    协商缓存: 当强缓存未命中(资源过期了), 发请求带上最后修改的时间(或者文件唯一标识Etag)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    问后台, 这个资源, 是否还能继续用, 是否这个文件发生了变化?")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    服务器, 对比最后修改的时间, 或者对比唯一标识Etag, ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (1) 发现都一致, 这个资源还能用 (不会返回资源) 304")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    (2) 发现不一致, 说明资源变化了 (会完整的返回新资源) 200")]),t._v("\n\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("hr")])}),[],!1,null,null,null);_.default=a.exports}}]);