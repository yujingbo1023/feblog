(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{5199:function(s,t,a){s.exports=a.p+"assets/img/fasdfsadfsadfsadfsadf.3e2ac356.png"},5200:function(s,t,a){s.exports=a.p+"assets/img/fsdfsadfsadfsadf.d3a76e3b.png"},5201:function(s,t,a){s.exports=a.p+"assets/img/fsdfsadfsadfasdfsadf.0cbaa351.png"},5202:function(s,t,a){s.exports=a.p+"assets/img/fsdfsadfasdf.8727e482.png"},6101:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-分支结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支结构"}},[s._v("#")]),s._v(" 1 - 分支结构")]),s._v(" "),n("h3",{attrs:{id:"_1-1-三大流程控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-三大流程控制"}},[s._v("#")]),s._v(" 1.1 三大流程控制")]),s._v(" "),n("p",[n("strong",[s._v("在日常生活中，也有三大流程，有：顺序流程，选择流程，循环流程。日常生活中是任何事件，都可以使用上面的三大流程解释。在计算机中，对应了三大结构，顺序结构，分支结构，循环结构。")])]),s._v(" "),n("ul",[n("li",[s._v("顺序 —— 从上向下，顺序执行代码")]),s._v(" "),n("li",[s._v("分支 —— 根据条件判断，决定执行代码的 分支")]),s._v(" "),n("li",[s._v("循环 —— 让 特定代码 重复 执行")])]),s._v(" "),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5199)}})]),s._v(" "),n("h3",{attrs:{id:"_1-2-分支语句之if语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-分支语句之if语句"}},[s._v("#")]),s._v(" 1.2 分支语句之if语句")]),s._v(" "),n("p",[n("strong",[s._v("代码块:")])]),s._v(" "),n("ul",[n("li",[s._v("代码块是多行执行代码的集合，通过一个花括号{}放到了一起")]),s._v(" "),n("li",[s._v("在JavaScript中，我们可以通过流程控制语句来决定如何执行一个代码块")])]),s._v(" "),n("p",[n("strong",[s._v("分支语句可以让我们有选择性的执行想要的代码:")])]),s._v(" "),n("ul",[n("li",[s._v("if分支语句")]),s._v(" "),n("li",[s._v("三元运算符")]),s._v(" "),n("li",[s._v("switch 语句")])]),s._v(" "),n("p",[n("strong",[s._v("if语句：")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("if语句有三种使用：单分支、双分支、多分支")])]),s._v(" "),n("li",[n("p",[s._v("单分支if语法：\n")]),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5200)}})]),n("p")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 括号内的条件为true时，进入大括号里执行代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 小括号内的结果若不是布尔类型时，会发生隐式转换转为布尔类型")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数字 0、空字符串 “”、null、undefined 和 NaN 都会被转换成 false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其他值被转换为 true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    满足条件要执行的代码\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("双分支if语法：\n"),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5201)}})])])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    满足条件要执行的代码\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    不满足条件要执行的代码\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("多分支if语法：\n"),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5202)}})])])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先判断条件1，若满足条件1就执行代码1，其他不执行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若不满足则向下判断条件2，满足条件2执行代码2，其他不执行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若依然不满足继续往下判断，依次类推")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若以上条件都不满足，执行else里的代码n  注：可以写N个条件，但这里演示只写2个")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    代码"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    代码"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    代码"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    代码n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("strong",[s._v("注意细节：")])]),s._v(" "),n("ul",[n("li",[s._v("if语句中的条件，不管是什么表达式，都会转化成布尔类型")]),s._v(" "),n("li",[s._v("if语句中对 是否相等 来判断时，最好将常量写在前面")]),s._v(" "),n("li",[s._v("if语句后面的{}可以不写，如果不写，只有if后面第1条语句，相当于是{}中的")]),s._v(" "),n("li",[s._v("if语句可以嵌套")])]),s._v(" "),n("p",[n("strong",[s._v("练习题：")])]),s._v(" "),n("ul",[n("li",[s._v("接收用户输入的数据，判断这个数据是偶数还是奇数，如果是偶数，输出yes，如果是奇数，输出no")]),s._v(" "),n("li",[s._v("接收用户输入的1~7数据，判断是星期几后，打印出来")]),s._v(" "),n("li",[s._v("接收用户输入的1~12的数据，判断是什么季节后输出")]),s._v(" "),n("li",[s._v("有三个变量：a,b,c  将变量升序排序后输出")]),s._v(" "),n("li",[s._v("判断一个年份是否是闰年")]),s._v(" "),n("li",[s._v("输入一个0到50的数，如果数小于10，需要在它前面补0。")])]),s._v(" "),n("h3",{attrs:{id:"_1-3-分支语句之switch语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-分支语句之switch语句"}},[s._v("#")]),s._v(" 1.3 分支语句之switch语句")]),s._v(" "),n("p",[n("strong",[s._v("switch语句：")])]),s._v(" "),n("ul",[n("li",[s._v("它是通过判断表达式的结果（或者变量）是否等于case语句的常量，来执行相应的分支体的；")]),s._v(" "),n("li",[s._v("与if语句不同的是，switch语句只能做值的相等判断（使用全等运算符 ===），而if语句可以做值的范围判断")]),s._v(" "),n("li",[s._v("switch case一般需要配合break关键字使用 没有break会造成case穿透")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到跟小括号里数据全等的case值，并执行里面对应的代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若没有全等 === 的则执行default里的代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" 值"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        代码"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" 值"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        代码"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        代码n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[n("strong",[s._v("default：")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在我们描述switch语句的时候")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// switch明显没有很好的满足我们的需求")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.我们需要 当匹配到一个之后 就只执行那个case对应的代码 不在执行后面的代码")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.当我的值 不在case列举的那些中间的时候 需要有一个默认的处理")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于需求1  我们采用break")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var a=2;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// switch (a) {")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     case 1:console.log('1');break;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     case 2:console.log('2');break;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     case 3:console.log('3');break;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     case 4:console.log('4');break;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只要我们在后面写了break 那么我们就不会执行多余的代码")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时我们的控制塔就只会输出2")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于需求2 我们采用default")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'不在列举范围内'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时 就会输出 不在列举范围内")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);