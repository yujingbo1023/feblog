(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{5188:function(s,t,a){s.exports=a.p+"assets/img/fsdfsadfsadfdsf.38f7b830.png"},5189:function(s,t,a){s.exports=a.p+"assets/img/fsdfsadfsadfd.55a7cd13.png"},6100:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-循环结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-循环结构"}},[s._v("#")]),s._v(" 1 - 循环结构")]),s._v(" "),n("h3",{attrs:{id:"_1-1-循环语句之while循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-循环语句之while循环"}},[s._v("#")]),s._v(" 1.1 循环语句之while循环")]),s._v(" "),n("p",[n("strong",[s._v("while循环语句:")])]),s._v(" "),n("ul",[n("li",[s._v("跟if语句很像，都要满足小括号里的条件为true才会进入执行代码")]),s._v(" "),n("li",[s._v("while大括号里代码执行完毕后不会跳出，而是继续回到小括号里判断条件是否满足，若满足又执行大括号里的代码，然后再回到\n小括号判断条件，直到括号内条件不满足，即跳出")])]),s._v(" "),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5188)}})]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环的本质就是以某个变量为起始值，然后不断产生变化量，慢慢靠近终止条件的过程。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环需要具备三要素：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 变量起始值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 终止条件（没有终止条件，循环会一直执行，造成死循环）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 变量变化量（用自增或者自减）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开发中一定要避免死循环的产生；")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while语句的语法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while(条件){代码}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// while代码的执行顺序是")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.先判定条件 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.条件成立 =>执行代码=>循环判定条件 执行代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.条件不成立 不在执行代码  跳出循环")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    重复要执行的代码（循环体）\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以上代码的执行顺序是")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.先声明变量a 值为1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.判定条件a<3是否成立 1<3成立")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.执行代码 输出a  然后a++ 此时a的值为2")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.重新判断条件  2<3 符合条件 所以继续执行{}中的代码 输出a 然后a++")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5.此时a的值变成了3 3<3 不成立 不在执行代码 结束循环")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6.执行循环外面的输出a 此时的a是3  所以我们上述代码的输出结果是  1 2 3")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("strong",[s._v("while循环的练习题目：")])]),s._v(" "),n("ul",[n("li",[s._v("练习一：打印10次Hello World")]),s._v(" "),n("li",[s._v("练习二：打印0~99的数字")]),s._v(" "),n("li",[s._v("练习三：计算0~99的数字和")]),s._v(" "),n("li",[s._v("练习四：计算0~99所有奇数的和")]),s._v(" "),n("li",[s._v("练习五：计算0~99所有偶数的和")])]),s._v(" "),n("h3",{attrs:{id:"_1-2-循环语句之do-while循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-循环语句之do-while循环"}},[s._v("#")]),s._v(" 1.2 循环语句之do..while循环")]),s._v(" "),n("p",[n("strong",[s._v("do..while循环语句:")])]),s._v(" "),n("ul",[n("li",[s._v("do..while循环和while循环非常像，二者经常可以相互替代(不常用)")]),s._v(" "),n("li",[s._v("do..while的特点是不管条件成不成立，do循环体都会先执行一次")])]),s._v(" "),n("div",{staticStyle:{}},[n("img",{staticStyle:{zoom:"70%"},attrs:{src:a(5189)}})]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dowhile循环的语法")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// do{代码}while(条件)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该语句的执行顺序是")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.先执行代码")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.判定条件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.条件成立=> 执行代码=>循环判定条件 执行代码")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   条件不成立=>出循环")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      重复要执行的代码（循环体）\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// do while 和while 很像 不过while是先判断后执行  do while 是先执行一次 在判断")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("888")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1)绝大部分情况下 dowhile 和while是可以进行互转的")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2)dowhile循环的循环体至少执行一次，while的循环体可能一次都不执行")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3)在真实开发中，基本上不用dowhile 很少用while 更多的用的是for循环")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"_1-3-循环语句之for循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-循环语句之for循环"}},[s._v("#")]),s._v(" 1.3 循环语句之for循环")]),s._v(" "),n("p",[n("strong",[s._v("for循环语句:")])]),s._v(" "),n("ul",[n("li",[s._v("for 循环更加复杂，但它是最常使用的循环形式。")]),s._v(" "),n("li",[s._v("把声明起始值、循环条件、变化值写到一起，让人一目了然")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("声明记录循环次数的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 变化值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  循环体\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("for循环的练习题目：")])]),s._v(" "),n("ul",[n("li",[s._v("练习一：打印10次Hello World")]),s._v(" "),n("li",[s._v("练习二：打印0~99的数字")]),s._v(" "),n("li",[s._v("练习三：计算0~99的数字和")]),s._v(" "),n("li",[s._v("练习四：计算0~99所有奇数的和")]),s._v(" "),n("li",[s._v("练习五：计算0~99所有偶数的和*")])]),s._v(" "),n("p",[n("strong",[s._v("for循环和while循环有什么区别呢：")])]),s._v(" "),n("ul",[n("li",[s._v("当如果明确了循环的次数的时候推荐使用for循环")]),s._v(" "),n("li",[s._v("当不明确循环的次数的时候推荐使用while循环")])]),s._v(" "),n("h3",{attrs:{id:"_1-4-循环语句之for循环嵌套"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-循环语句之for循环嵌套"}},[s._v("#")]),s._v(" 1.4 循环语句之for循环嵌套")]),s._v(" "),n("ul",[n("li",[s._v("一个循环里再套一个循环，一般用在for循环里")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("外部声明记录循环次数的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 变化值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("内部声明记录循环次数的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 变化值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    循环体\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"_1-5-循环语句之循环控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-循环语句之循环控制"}},[s._v("#")]),s._v(" 1.5 循环语句之循环控制")]),s._v(" "),n("p",[n("strong",[s._v("循环的跳转（控制）：")])]),s._v(" "),n("ul",[n("li",[s._v("在执行循环过程中, 遇到某一个条件时, 我们可能想要做一些事情；")]),s._v(" "),n("li",[s._v("比如循环体不再执行(即使没有执行完), 跳出循环；\n"),n("ul",[n("li",[s._v("break: 直接跳出循环, 循环结束")]),s._v(" "),n("li",[s._v("某一条件满足时，退出循环，不再执行后续重复的代码")])])]),s._v(" "),n("li",[s._v("比如本次循环体不再执行, 执行下一次的循环体；\n"),n("ul",[n("li",[s._v("continue: 跳过本次循环次, 执行下一次循环体")]),s._v(" "),n("li",[s._v("continue 某一条件满足时，不执行后续重复的代码")])])])]),s._v(" "),n("h3",{attrs:{id:"_1-6-for循环之双重for循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-for循环之双重for循环"}},[s._v("#")]),s._v(" 1.6 for循环之双重for循环")]),s._v(" "),n("p",[s._v("-双重for循环是指两个for循环嵌套使用 外层循环循环一次内层循环 循环一圈\n-循环的次数等于 外层循环次数*内层循环次数")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" index "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" index "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" index"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里面 外层循环循环了9  内层循环每一次执行都会循环9次 所以总共循环了9*9次")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"_1-7-使用双重for循环打印5-5的星星矩阵"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-使用双重for循环打印5-5的星星矩阵"}},[s._v("#")]),s._v(" 1.7 使用双重for循环打印5*5的星星矩阵")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里我们知道 我们一般情况下去写一个5*5的星星矩阵")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 肯定是先在第一行写5个 然后第二行 一直到第五行 所以在这里实际上 我们也是在循环")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 外层循环控制的是我们的行 第一行第二行  内层循环控制的是列 比如第一行的第一列 第一行的第二列等等")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<br>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);